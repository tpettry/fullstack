//reference type

var object1 = {value: 10};
var object2 = object1;
var object3 = {value: 10};

//context vs scope
function b() {
  let a = 4; //this is scope
}

console.log(this) //this is the window object
console.log(this === window) //Produces true

const object4 = {
  a: function() {
      console.log(this);
  }
}
//instantiation when you make a copy of an object and reuse the code
class Player {
  constructor(name, type) {
    this.name = name;
    this.type = type;
  }
  introduce() {
    console.log(`Hi I am ${this.name}, I'm a ${this.type}`);
  }
}

class Wizard extends Player {
  constructor(name, type) {
    super(name, type)
  }
  play() {
    console.log(`Weeeeee I'm a ${this.type}`);
  }
}

const wizard1 = new Wizard('Shelly', 'Healer');
const wizard2 = new Wizard('Shawn', 'Dark Magic');
